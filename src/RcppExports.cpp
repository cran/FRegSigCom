// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// C_cv_fix_effects
List C_cv_fix_effects(List t_x, List X, Eigen::MatrixXd Y, Eigen::VectorXi main_index, Eigen::VectorXi inter_index, List x_params_raw, List x_params, List y_params, List all_folds, int upper_comp, double thresh);
RcppExport SEXP _FRegSigCom_C_cv_fix_effects(SEXP t_xSEXP, SEXP XSEXP, SEXP YSEXP, SEXP main_indexSEXP, SEXP inter_indexSEXP, SEXP x_params_rawSEXP, SEXP x_paramsSEXP, SEXP y_paramsSEXP, SEXP all_foldsSEXP, SEXP upper_compSEXP, SEXP threshSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type t_x(t_xSEXP);
    Rcpp::traits::input_parameter< List >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi >::type main_index(main_indexSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi >::type inter_index(inter_indexSEXP);
    Rcpp::traits::input_parameter< List >::type x_params_raw(x_params_rawSEXP);
    Rcpp::traits::input_parameter< List >::type x_params(x_paramsSEXP);
    Rcpp::traits::input_parameter< List >::type y_params(y_paramsSEXP);
    Rcpp::traits::input_parameter< List >::type all_folds(all_foldsSEXP);
    Rcpp::traits::input_parameter< int >::type upper_comp(upper_compSEXP);
    Rcpp::traits::input_parameter< double >::type thresh(threshSEXP);
    rcpp_result_gen = Rcpp::wrap(C_cv_fix_effects(t_x, X, Y, main_index, inter_index, x_params_raw, x_params, y_params, all_folds, upper_comp, thresh));
    return rcpp_result_gen;
END_RCPP
}
// C_pred_ff_inter
Eigen::MatrixXd C_pred_ff_inter(List fit_cv, Eigen::MatrixXd Y_train, List X_test, List x_params, List y_params, List y_penalty_inv);
RcppExport SEXP _FRegSigCom_C_pred_ff_inter(SEXP fit_cvSEXP, SEXP Y_trainSEXP, SEXP X_testSEXP, SEXP x_paramsSEXP, SEXP y_paramsSEXP, SEXP y_penalty_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type fit_cv(fit_cvSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y_train(Y_trainSEXP);
    Rcpp::traits::input_parameter< List >::type X_test(X_testSEXP);
    Rcpp::traits::input_parameter< List >::type x_params(x_paramsSEXP);
    Rcpp::traits::input_parameter< List >::type y_params(y_paramsSEXP);
    Rcpp::traits::input_parameter< List >::type y_penalty_inv(y_penalty_invSEXP);
    rcpp_result_gen = Rcpp::wrap(C_pred_ff_inter(fit_cv, Y_train, X_test, x_params, y_params, y_penalty_inv));
    return rcpp_result_gen;
END_RCPP
}
// C_stepwise_adaptive
List C_stepwise_adaptive(List t_x, List X, Eigen::MatrixXd Y, List x_params_raw, List x_params, List y_params, List all_folds, int upper_comp, double thresh);
RcppExport SEXP _FRegSigCom_C_stepwise_adaptive(SEXP t_xSEXP, SEXP XSEXP, SEXP YSEXP, SEXP x_params_rawSEXP, SEXP x_paramsSEXP, SEXP y_paramsSEXP, SEXP all_foldsSEXP, SEXP upper_compSEXP, SEXP threshSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type t_x(t_xSEXP);
    Rcpp::traits::input_parameter< List >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< List >::type x_params_raw(x_params_rawSEXP);
    Rcpp::traits::input_parameter< List >::type x_params(x_paramsSEXP);
    Rcpp::traits::input_parameter< List >::type y_params(y_paramsSEXP);
    Rcpp::traits::input_parameter< List >::type all_folds(all_foldsSEXP);
    Rcpp::traits::input_parameter< int >::type upper_comp(upper_compSEXP);
    Rcpp::traits::input_parameter< double >::type thresh(threshSEXP);
    rcpp_result_gen = Rcpp::wrap(C_stepwise_adaptive(t_x, X, Y, x_params_raw, x_params, y_params, all_folds, upper_comp, thresh));
    return rcpp_result_gen;
END_RCPP
}
// C_find_coef_ff_interaction
List C_find_coef_ff_interaction(List fit_cv, List X_train, Eigen::MatrixXd Y_train, List x_params, List y_params, List y_penalty_inv);
RcppExport SEXP _FRegSigCom_C_find_coef_ff_interaction(SEXP fit_cvSEXP, SEXP X_trainSEXP, SEXP Y_trainSEXP, SEXP x_paramsSEXP, SEXP y_paramsSEXP, SEXP y_penalty_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type fit_cv(fit_cvSEXP);
    Rcpp::traits::input_parameter< List >::type X_train(X_trainSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y_train(Y_trainSEXP);
    Rcpp::traits::input_parameter< List >::type x_params(x_paramsSEXP);
    Rcpp::traits::input_parameter< List >::type y_params(y_paramsSEXP);
    Rcpp::traits::input_parameter< List >::type y_penalty_inv(y_penalty_invSEXP);
    rcpp_result_gen = Rcpp::wrap(C_find_coef_ff_interaction(fit_cv, X_train, Y_train, x_params, y_params, y_penalty_inv));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FRegSigCom_C_cv_fix_effects", (DL_FUNC) &_FRegSigCom_C_cv_fix_effects, 11},
    {"_FRegSigCom_C_pred_ff_inter", (DL_FUNC) &_FRegSigCom_C_pred_ff_inter, 6},
    {"_FRegSigCom_C_stepwise_adaptive", (DL_FUNC) &_FRegSigCom_C_stepwise_adaptive, 9},
    {"_FRegSigCom_C_find_coef_ff_interaction", (DL_FUNC) &_FRegSigCom_C_find_coef_ff_interaction, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_FRegSigCom(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
